{"version":3,"sources":["../src/Client.js"],"names":["Client","cfg","username","password","endpoint","_lastRequest","_lastResponse","req","userPass","join","token","Buffer","toString","headers","params","path","method","url","data","timeout","success","lastResponse","lastRequest","Promise","resolve","reject","r","auth","createReq","then","response","composeOutput","catch"],"mappings":";;;;;;;qjBAAA;;;;;;;;AAQA;;;;;;;;IAEqBA,M;AACjB,oBAAYC,GAAZ,EAAiB;AAAA;;AAAA,YACPC,QADO,GAC0BD,GAD1B,CACPC,QADO;AAAA,YACGC,QADH,GAC0BF,GAD1B,CACGE,QADH;AAAA,YACaC,QADb,GAC0BH,GAD1B,CACaG,QADb;;;AAGb,aAAKF,QAAL,GAAgBA,QAAhB;AACA,aAAKC,QAAL,GAAgBA,QAAhB;AACA,aAAKC,QAAL,GAAgBA,QAAhB;;AAEA,aAAKC,YAAL,GAAoB,IAApB;AACA,aAAKC,aAAL,GAAqB,IAArB;AACH;;;;6BAEIC,G,EAAK;AACN,gBAAIC,WAAW,CAAC,KAAKN,QAAN,EAAgB,KAAKC,QAArB,EAA+BM,IAA/B,CAAoC,GAApC,CAAf;AACA,gBAAIC,QAAQ,IAAIC,MAAJ,CAAWH,QAAX,EAAqBI,QAArB,CAA8B,QAA9B,CAAZ;;AAEAL,gBAAIM,OAAJ,CAAY,eAAZ,IAA+B,WAAWH,KAA1C;;AAEA,mBAAOH,GAAP;AACH;;;kCAESO,M,EAAQC,I,EAAM;AACpB,mBAAO;AACHC,wBAAQ,MADL;AAEHC,qBAAK,KAAKb,QAAL,GAAgBW,IAFlB;AAGHF,yBAAS;AACL,oCAAgB;AADX,iBAHN;AAMHK,sBAAMJ,MANH;AAOHK,yBAAS;AAPN,aAAP;AASH;;;sCAEaD,I,EAAME,O,EAAS;AACzB,mBAAO;AACHA,yBAASA,OADN;AAEHF,sBAAMA,IAFH;AAGHG,8BAAc,KAAKf,aAHhB;AAIHgB,6BAAa,KAAKjB;AAJf,aAAP;AAMH;;;oCAEWS,M,EAAQC,I,EAAM;AAAA;;AACtB,mBAAO,IAAIQ,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,oBAAIC,IAAI,MAAKC,IAAL,CAAU,MAAKC,SAAL,CAAed,MAAf,EAAuBC,IAAvB,CAAV,CAAR;;AAEA,sBAAKV,YAAL,GAAoBqB,CAApB;AACA,sBAAKpB,aAAL,GAAqB,IAArB;;AAEA,qCAAMoB,CAAN,EACKG,IADL,CAEQ,oBAAY;AACR,0BAAKvB,aAAL,GAAqBwB,QAArB;AACA,2BAAON,QAAQ,MAAKO,aAAL,CAAmBD,SAASZ,IAA5B,EAAkC,IAAlC,CAAR,CAAP;AACH,iBALT,EAMQ,oBAAY;AACR,0BAAKZ,aAAL,GAAqBwB,QAArB;AACA,2BAAOL,OAAO,MAAKM,aAAL,CAAmBD,SAASZ,IAA5B,EAAkC,KAAlC,CAAP,CAAP;AACH,iBATT,EAWKc,KAXL,CAWW,oBAAY;AACf,2BAAOP,OAAO,MAAKM,aAAL,CAAmBD,SAASZ,IAA5B,EAAkC,KAAlC,CAAP,CAAP;AACH,iBAbL;AAcH,aApBM,CAAP;AAqBH;;;;;;kBAhEgBlB,M","file":"Client.js","sourcesContent":["/*\n * adyen-client\n *\n *\n * Copyright (c) 2018 Daniel Biedma Ramos\n * Licensed under the MIT license.\n */\n\nimport axios from 'axios';\n\nexport default class Client {\n    constructor(cfg) {\n        let { username, password, endpoint } = cfg;\n\n        this.username = username;\n        this.password = password;\n        this.endpoint = endpoint;\n\n        this._lastRequest = null;\n        this._lastResponse = null;\n    }\n\n    auth(req) {\n        var userPass = [this.username, this.password].join(':');\n        var token = new Buffer(userPass).toString('base64');\n\n        req.headers['Authorization'] = 'Basic ' + token;\n\n        return req;\n    }\n\n    createReq(params, path) {\n        return {\n            method: 'post',\n            url: this.endpoint + path,\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: params,\n            timeout: 20000\n        };\n    }\n\n    composeOutput(data, success) {\n        return {\n            success: success,\n            data: data,\n            lastResponse: this._lastResponse,\n            lastRequest: this._lastRequest\n        };\n    }\n\n    makeRequest(params, path) {\n        return new Promise((resolve, reject) => {\n            var r = this.auth(this.createReq(params, path));\n\n            this._lastRequest = r;\n            this._lastResponse = null;\n\n            axios(r)\n                .then(\n                    response => {\n                        this._lastResponse = response;\n                        return resolve(this.composeOutput(response.data, true));\n                    },\n                    response => {\n                        this._lastResponse = response;\n                        return reject(this.composeOutput(response.data, false));\n                    }\n                )\n                .catch(response => {\n                    return reject(this.composeOutput(response.data, false));\n                });\n        });\n    }\n}\n"]}